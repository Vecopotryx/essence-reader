{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/fast-xml-parser/src/util.js","../../node_modules/fast-xml-parser/src/validator.js","../../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../../node_modules/strnum/strnum.js","../../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../../node_modules/fast-xml-parser/src/xmlparser/node2json.js","../../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../../node_modules/fast-xml-parser/src/fxp.js","../../node_modules/unzipit/dist/unzipit.module.js","../../src/parse.ts","../../src/components/Topbar.svelte","../../src/components/Popover.svelte","../../src/components/ThemePicker.svelte","../../src/components/ReaderSettings.svelte","../../src/Reader.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.47.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    if (tag && typeof tag !== 'string') {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, entity = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<') {\n                if( hasBody && \n                     xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'N' &&\n                     xmlData[i+4] === 'T' &&\n                     xmlData[i+5] === 'I' &&\n                     xmlData[i+6] === 'T' &&\n                     xmlData[i+7] === 'Y'\n                ){\n                    i += 7;\n                    entity = true;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'L' &&\n                     xmlData[i+4] === 'E' &&\n                     xmlData[i+5] === 'M' &&\n                     xmlData[i+6] === 'E' &&\n                     xmlData[i+7] === 'N' &&\n                     xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( //comment\n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === '-' &&\n                    xmlData[i+3] === '-'\n                ){\n                    comment = true;\n                }else{\n                    throw new Error(\"Invalid DOCTYPE\");\n                }\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') {\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                    }else{\n                        throw new Error(`Invalid XML comment in DOCTYPE`);\n                    }\n                }else if(entity){\n                    parseEntityExp(exp, entities);\n                    entity = false;\n                }\n                angleBracketsCount--;\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst entityRegex = RegExp(\"^\\\\s([a-zA-z0-0]+)[ \\t](['\\\"])([^&]+)\\\\2\");\nfunction parseEntityExp(exp, entities){\n    const match = entityRegex.exec(exp);\n    if(match){\n        entities[ match[1] ] = {\n            regx : RegExp( `&${match[1]};`,\"g\"),\n            val: match[3]\n        };\n    }\n}\nmodule.exports = readDocType;","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"amp\" : { regex: /&(amp|#38|#x26);/g, val : \"&\"},\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      const aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n        \n        currentNode = this.tagsNodeStack.pop();//avoid recurssion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath);\n          }\n          currentNode.addChild(childNode);\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(!val) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n       \n        let result = readTagExp(xmlData,i, this. options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n        }\n\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //boolean tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          currentNode.addChild(childNode);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            currentNode.addChild(childNode);\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            currentNode.addChild(childNode);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nconst replaceEntitiesValue = function(val){\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-dobule quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\" && xmlData[i+1] === \"/\"){ \n        const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n        let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n        if(closeTagName === tagName){\n          return {\n            tagContent: xmlData.substring(startIndex, i),\n            i : closeIndex\n          }\n        }\n        i=closeIndex;\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined) {\n        if(!Array.isArray(compressedObj[property])) {\n          compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const propCount = Object.keys(obj).length;\n  if( propCount === 0 || (propCount === 1 && obj[options.textNodeName]) ) return true;\n  return false;\n}\nexports.prettify = prettify;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options){\n    return arrToStr( jArray, options, \"\", 0);\n}\n\nfunction arrToStr(arr, options, jPath, level){\n    let xmlStr = \"\";\n\n    let indentation = \"\";\n    if(options.format && options.indentBy.length > 0){//TODO: this logic can be avoided for each call\n        indentation = EOL + \"\" + options.indentBy.repeat(level);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if(jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if(tagName === options.textNodeName){\n            let tagText = tagObj[tagName];\n            if(!isStopNode(newJPath, options)){\n                tagText = options.tagValueProcessor( tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            xmlStr += indentation + tagText;\n            continue;\n        }else if( tagName === options.cdataPropName){\n            xmlStr += indentation + `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            continue;\n        }else if( tagName === options.commentPropName){\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            continue;\n        }else if( tagName[0] === \"?\"){\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            continue;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        let tagStart =  indentation + `<${tagName}${attStr}`;\n        let tagValue = arrToStr(tagObj[tagName], options, newJPath, level + 1);\n        if(options.unpairedTags.indexOf(tagName) !== -1){\n            if(options.suppressUnpairedNode)  xmlStr += tagStart + \">\"; \n            else xmlStr += tagStart + \"/>\"; \n        }else if( (!tagValue || tagValue.length === 0) && options.suppressEmptyNode){ \n            xmlStr += tagStart + \"/>\"; \n        }else{ \n            //TODO: node with only text value should not parse the text value in next line\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>` ;\n        }\n    }\n    \n    return xmlStr;\n}\n\nfunction propName(obj){\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if(key !== \":@\") return key;\n    }\n  }\n\nfunction attr_to_str(attrMap, options){\n    let attrStr = \"\";\n    if(attrMap && !options.ignoreAttributes){\n        for (let attr in attrMap){\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if(attrVal === true && options.suppressBooleanAttributes){\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            }else{\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options){\n    jPath = jPath.substr(0,jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for(let index in options.stopNodes){\n        if(options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\"+tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options){\n    if(textValue && textValue.length > 0 && options.processEntities){\n      for (let i=0; i< options.entities.length; i++) {\n        const entity = options.entities[i];\n        textValue = textValue.replace(entity.regex, entity.val);\n      }\n    }\n    return textValue;\n  }\nmodule.exports = toXml;","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: []\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.suppressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n\n  this.replaceEntitiesValue = replaceEntitiesValue;\n  this.buildAttrPairStr = buildAttrPairStr;\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          val += this.processTextOrObjNode(item, key, level)\n        } else {\n          val += this.buildTextNode(item, key, '', level);\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction buildAttrPairStr(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjNode(result.val, key, result.attrStr, level);\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  let tagEndExp = '</' + key + this.tagEndChar;\n  let piClosingChar = \"\";\n  \n  if(key[0] === \"?\") {\n    piClosingChar = \"?\";\n    tagEndExp = \"\";\n  }\n\n  if (attrStr && val.indexOf('<') === -1) {\n    return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n  } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n    return this.indentate(level) + `<!--${val}-->` + this.newLine;\n  }else {\n    return (\n      this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n      val +\n      this.indentate(level) + tagEndExp    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === '' && this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n      if(this.options.suppressUnpairedNode){\n        return this.indentate(level) + '<' + key + this.tagEndChar;\n      }else{\n        return this.indentate(level) + '<' + key + \"/\" + this.tagEndChar;\n      }\n    } else{\n      return (\n        this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar  );\n    }\n\n  }\n}\n\nfunction replaceEntitiesValue(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if( val === '' && this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(this.options.suppressUnpairedNode){\n      return this.indentate(level) + '<' + key + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + \"/\" + this.tagEndChar;\n    }\n  }else if (val !== '') { //empty\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; //PI tag\n    else return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar; //normal\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","/* unzipit@1.4.0, license MIT */\n/* global SharedArrayBuffer, process */\n\nfunction readBlobAsArrayBuffer(blob) {\n  if (blob.arrayBuffer) {\n    return blob.arrayBuffer();\n  }\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', () => {\n      resolve(reader.result);\n    });\n    reader.addEventListener('error', reject);\n    reader.readAsArrayBuffer(blob);\n  });\n}\n\nasync function readBlobAsUint8Array(blob) {\n  const arrayBuffer = await readBlobAsArrayBuffer(blob);\n  return new Uint8Array(arrayBuffer);\n}\n\nfunction isBlob(v) {\n  return typeof Blob !== 'undefined' && v instanceof Blob;\n}\n\nfunction isSharedArrayBuffer(b) {\n  return typeof SharedArrayBuffer !== 'undefined' && b instanceof SharedArrayBuffer;\n}\n\nconst isNode =\n    (typeof process !== 'undefined') &&\n    process.versions &&\n    (typeof process.versions.node !== 'undefined') &&\n    (typeof process.versions.electron === 'undefined');\n\nfunction isTypedArraySameAsArrayBuffer(typedArray) {\n  return typedArray.byteOffset === 0 && typedArray.byteLength === typedArray.buffer.byteLength;\n}\n\nclass ArrayBufferReader {\n  constructor(arrayBufferOrView) {\n    this.typedArray = (arrayBufferOrView instanceof ArrayBuffer || isSharedArrayBuffer(arrayBufferOrView))\n       ? new Uint8Array(arrayBufferOrView)\n       : new Uint8Array(arrayBufferOrView.buffer, arrayBufferOrView.byteOffset, arrayBufferOrView.byteLength);\n  }\n  async getLength() {\n    return this.typedArray.byteLength;\n  }\n  async read(offset, length) {\n    return new Uint8Array(this.typedArray.buffer, this.typedArray.byteOffset + offset, length);\n  }\n}\n\nclass BlobReader {\n  constructor(blob) {\n    this.blob = blob;\n  }\n  async getLength() {\n    return this.blob.size;\n  }\n  async read(offset, length) {\n    const blob = this.blob.slice(offset, offset + length);\n    const arrayBuffer = await readBlobAsArrayBuffer(blob);\n    return new Uint8Array(arrayBuffer);\n  }\n  async sliceAsBlob(offset, length, type = '') {\n    return this.blob.slice(offset, offset + length, type);\n  }\n}\n\nclass HTTPRangeReader {\n  constructor(url) {\n    this.url = url;\n  }\n  async getLength() {\n    if (this.length === undefined) {\n      const req = await fetch(this.url, { method: 'HEAD' });\n      if (!req.ok) {\n        throw new Error(`failed http request ${this.url}, status: ${req.status}: ${req.statusText}`);\n      }\n      this.length = parseInt(req.headers.get('content-length'));\n      if (Number.isNaN(this.length)) {\n        throw Error('could not get length');\n      }\n    }\n    return this.length;\n  }\n  async read(offset, size) {\n    if (size === 0) {\n      return new Uint8Array(0);\n    }\n    const req = await fetch(this.url, {\n      headers: {\n        Range: `bytes=${offset}-${offset + size - 1}`,\n      },\n    });\n    if (!req.ok) {\n      throw new Error(`failed http request ${this.url}, status: ${req.status} offset: ${offset} size: ${size}: ${req.statusText}`);\n    }\n    const buffer = await req.arrayBuffer();\n    return new Uint8Array(buffer);\n  }\n}\n\nfunction inflate(data, buf) {\n\tvar u8=Uint8Array;\n\tif(data[0]==3 && data[1]==0) return (buf ? buf : new u8(0));\n\tvar bitsF = _bitsF, bitsE = _bitsE, decodeTiny = _decodeTiny, get17 = _get17;\n\t\n\tvar noBuf = (buf==null);\n\tif(noBuf) buf = new u8((data.length>>>2)<<3);\n\t\n\tvar BFINAL=0, BTYPE=0, HLIT=0, HDIST=0, HCLEN=0, ML=0, MD=0; \t\n\tvar off = 0, pos = 0;\n\tvar lmap, dmap;\n\t\n\twhile(BFINAL==0) {\t\t\n\t\tBFINAL = bitsF(data, pos  , 1);\n\t\tBTYPE  = bitsF(data, pos+1, 2);  pos+=3;\n\t\t//console.log(BFINAL, BTYPE);\n\t\t\n\t\tif(BTYPE==0) {\n\t\t\tif((pos&7)!=0) pos+=8-(pos&7);\n\t\t\tvar p8 = (pos>>>3)+4, len = data[p8-4]|(data[p8-3]<<8);  //console.log(len);//bitsF(data, pos, 16), \n\t\t\tif(noBuf) buf=_check(buf, off+len);\n\t\t\tbuf.set(new u8(data.buffer, data.byteOffset+p8, len), off);\n\t\t\t//for(var i=0; i<len; i++) buf[off+i] = data[p8+i];\n\t\t\t//for(var i=0; i<len; i++) if(buf[off+i] != data[p8+i]) throw \"e\";\n\t\t\tpos = ((p8+len)<<3);  off+=len;  continue;\n\t\t}\n\t\tif(noBuf) buf=_check(buf, off+(1<<17));  // really not enough in many cases (but PNG and ZIP provide buffer in advance)\n\t\tif(BTYPE==1) {  lmap = U.flmap;  dmap = U.fdmap;  ML = (1<<9)-1;  MD = (1<<5)-1;   }\n\t\tif(BTYPE==2) {\n\t\t\tHLIT  = bitsE(data, pos   , 5)+257;  \n\t\t\tHDIST = bitsE(data, pos+ 5, 5)+  1;  \n\t\t\tHCLEN = bitsE(data, pos+10, 4)+  4;  pos+=14;\n\t\t\tfor(var i=0; i<38; i+=2) {  U.itree[i]=0;  U.itree[i+1]=0;  }\n\t\t\tvar tl = 1;\n\t\t\tfor(var i=0; i<HCLEN; i++) {  var l=bitsE(data, pos+i*3, 3);  U.itree[(U.ordr[i]<<1)+1] = l;  if(l>tl)tl=l;  }     pos+=3*HCLEN;  //console.log(itree);\n\t\t\tmakeCodes(U.itree, tl);\n\t\t\tcodes2map(U.itree, tl, U.imap);\n\t\t\t\n\t\t\tlmap = U.lmap;  dmap = U.dmap;\n\t\t\t\n\t\t\tpos = decodeTiny(U.imap, (1<<tl)-1, HLIT+HDIST, data, pos, U.ttree);\n\t\t\tvar mx0 = _copyOut(U.ttree,    0, HLIT , U.ltree);  ML = (1<<mx0)-1;\n\t\t\tvar mx1 = _copyOut(U.ttree, HLIT, HDIST, U.dtree);  MD = (1<<mx1)-1;\n\t\t\t\n\t\t\t//var ml = decodeTiny(U.imap, (1<<tl)-1, HLIT , data, pos, U.ltree); ML = (1<<(ml>>>24))-1;  pos+=(ml&0xffffff);\n\t\t\tmakeCodes(U.ltree, mx0);\n\t\t\tcodes2map(U.ltree, mx0, lmap);\n\t\t\t\n\t\t\t//var md = decodeTiny(U.imap, (1<<tl)-1, HDIST, data, pos, U.dtree); MD = (1<<(md>>>24))-1;  pos+=(md&0xffffff);\n\t\t\tmakeCodes(U.dtree, mx1);\n\t\t\tcodes2map(U.dtree, mx1, dmap);\n\t\t}\n\t\t//var ooff=off, opos=pos;\n\t\twhile(true) {\n\t\t\tvar code = lmap[get17(data, pos) & ML];  pos += code&15;\n\t\t\tvar lit = code>>>4;  //U.lhst[lit]++;  \n\t\t\tif((lit>>>8)==0) {  buf[off++] = lit;  }\n\t\t\telse if(lit==256) {  break;  }\n\t\t\telse {\n\t\t\t\tvar end = off+lit-254;\n\t\t\t\tif(lit>264) { var ebs = U.ldef[lit-257];  end = off + (ebs>>>3) + bitsE(data, pos, ebs&7);  pos += ebs&7;  }\n\t\t\t\t//dst[end-off]++;\n\t\t\t\t\n\t\t\t\tvar dcode = dmap[get17(data, pos) & MD];  pos += dcode&15;\n\t\t\t\tvar dlit = dcode>>>4;\n\t\t\t\tvar dbs = U.ddef[dlit], dst = (dbs>>>4) + bitsF(data, pos, dbs&15);  pos += dbs&15;\n\t\t\t\t\n\t\t\t\t//var o0 = off-dst, stp = Math.min(end-off, dst);\n\t\t\t\t//if(stp>20) while(off<end) {  buf.copyWithin(off, o0, o0+stp);  off+=stp;  }  else\n\t\t\t\t//if(end-dst<=off) buf.copyWithin(off, off-dst, end-dst);  else\n\t\t\t\t//if(dst==1) buf.fill(buf[off-1], off, end);  else\n\t\t\t\tif(noBuf) buf=_check(buf, off+(1<<17));\n\t\t\t\twhile(off<end) {  buf[off]=buf[off++-dst];    buf[off]=buf[off++-dst];  buf[off]=buf[off++-dst];  buf[off]=buf[off++-dst];  }   \n\t\t\t\toff=end;\n\t\t\t\t//while(off!=end) {  buf[off]=buf[off++-dst];  }\n\t\t\t}\n\t\t}\n\t\t//console.log(off-ooff, (pos-opos)>>>3);\n\t}\n\t//console.log(dst);\n\t//console.log(tlen, dlen, off-tlen+tcnt);\n\treturn buf.length==off ? buf : buf.slice(0,off);\n}\nfunction _check(buf, len) {\n\tvar bl=buf.length;  if(len<=bl) return buf;\n\tvar nbuf = new Uint8Array(Math.max(bl<<1,len));  nbuf.set(buf,0);\n\t//for(var i=0; i<bl; i+=4) {  nbuf[i]=buf[i];  nbuf[i+1]=buf[i+1];  nbuf[i+2]=buf[i+2];  nbuf[i+3]=buf[i+3];  }\n\treturn nbuf;\n}\n\nfunction _decodeTiny(lmap, LL, len, data, pos, tree) {\n\tvar bitsE = _bitsE, get17 = _get17;\n\tvar i = 0;\n\twhile(i<len) {\n\t\tvar code = lmap[get17(data, pos)&LL];  pos+=code&15;\n\t\tvar lit = code>>>4; \n\t\tif(lit<=15) {  tree[i]=lit;  i++;  }\n\t\telse {\n\t\t\tvar ll = 0, n = 0;\n\t\t\tif(lit==16) {\n\t\t\t\tn = (3  + bitsE(data, pos, 2));  pos += 2;  ll = tree[i-1];\n\t\t\t}\n\t\t\telse if(lit==17) {\n\t\t\t\tn = (3  + bitsE(data, pos, 3));  pos += 3;\n\t\t\t}\n\t\t\telse if(lit==18) {\n\t\t\t\tn = (11 + bitsE(data, pos, 7));  pos += 7;\n\t\t\t}\n\t\t\tvar ni = i+n;\n\t\t\twhile(i<ni) {  tree[i]=ll;  i++; }\n\t\t}\n\t}\n\treturn pos;\n}\nfunction _copyOut(src, off, len, tree) {\n\tvar mx=0, i=0, tl=tree.length>>>1;\n\twhile(i<len) {  var v=src[i+off];  tree[(i<<1)]=0;  tree[(i<<1)+1]=v;  if(v>mx)mx=v;  i++;  }\n\twhile(i<tl ) {  tree[(i<<1)]=0;  tree[(i<<1)+1]=0;  i++;  }\n\treturn mx;\n}\n\nfunction makeCodes(tree, MAX_BITS) {  // code, length\n\tvar max_code = tree.length;\n\tvar code, bits, n, i, len;\n\t\n\tvar bl_count = U.bl_count;  for(var i=0; i<=MAX_BITS; i++) bl_count[i]=0;\n\tfor(i=1; i<max_code; i+=2) bl_count[tree[i]]++;\n\t\n\tvar next_code = U.next_code;\t// smallest code for each length\n\t\n\tcode = 0;\n\tbl_count[0] = 0;\n\tfor (bits = 1; bits <= MAX_BITS; bits++) {\n\t\tcode = (code + bl_count[bits-1]) << 1;\n\t\tnext_code[bits] = code;\n\t}\n\t\n\tfor (n = 0; n < max_code; n+=2) {\n\t\tlen = tree[n+1];\n\t\tif (len != 0) {\n\t\t\ttree[n] = next_code[len];\n\t\t\tnext_code[len]++;\n\t\t}\n\t}\n}\nfunction codes2map(tree, MAX_BITS, map) {\n\tvar max_code = tree.length;\n\tvar r15 = U.rev15;\n\tfor(var i=0; i<max_code; i+=2) if(tree[i+1]!=0)  {\n\t\tvar lit = i>>1;\n\t\tvar cl = tree[i+1], val = (lit<<4)|cl; // :  (0x8000 | (U.of0[lit-257]<<7) | (U.exb[lit-257]<<4) | cl);\n\t\tvar rest = (MAX_BITS-cl), i0 = tree[i]<<rest, i1 = i0 + (1<<rest);\n\t\t//tree[i]=r15[i0]>>>(15-MAX_BITS);\n\t\twhile(i0!=i1) {\n\t\t\tvar p0 = r15[i0]>>>(15-MAX_BITS);\n\t\t\tmap[p0]=val;  i0++;\n\t\t}\n\t}\n}\nfunction revCodes(tree, MAX_BITS) {\n\tvar r15 = U.rev15, imb = 15-MAX_BITS;\n\tfor(var i=0; i<tree.length; i+=2) {  var i0 = (tree[i]<<(MAX_BITS-tree[i+1]));  tree[i] = r15[i0]>>>imb;  }\n}\n\nfunction _bitsE(dt, pos, length) {  return ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8)                        )>>>(pos&7))&((1<<length)-1);  }\nfunction _bitsF(dt, pos, length) {  return ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8) | (dt[(pos>>>3)+2]<<16))>>>(pos&7))&((1<<length)-1);  }\n/*\nfunction _get9(dt, pos) {\n\treturn ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8))>>>(pos&7))&511;\n} */\nfunction _get17(dt, pos) {\t// return at least 17 meaningful bytes\n\treturn (dt[pos>>>3] | (dt[(pos>>>3)+1]<<8) | (dt[(pos>>>3)+2]<<16) )>>>(pos&7);\n}\nconst U = function(){\n\tvar u16=Uint16Array, u32=Uint32Array;\n\treturn {\n\t\tnext_code : new u16(16),\n\t\tbl_count  : new u16(16),\n\t\tordr : [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ],\n\t\tof0  : [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],\n\t\texb  : [0,0,0,0,0,0,0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4,  4,  5,  5,  5,  5,  0,  0,  0,  0],\n\t\tldef : new u16(32),\n\t\tdf0  : [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577, 65535, 65535],\n\t\tdxb  : [0,0,0,0,1,1,2, 2, 3, 3, 4, 4, 5, 5,  6,  6,  7,  7,  8,  8,   9,   9,  10,  10,  11,  11,  12,   12,   13,   13,     0,     0],\n\t\tddef : new u32(32),\n\t\tflmap: new u16(  512),  fltree: [],\n\t\tfdmap: new u16(   32),  fdtree: [],\n\t\tlmap : new u16(32768),  ltree : [],  ttree:[],\n\t\tdmap : new u16(32768),  dtree : [],\n\t\timap : new u16(  512),  itree : [],\n\t\t//rev9 : new u16(  512)\n\t\trev15: new u16(1<<15),\n\t\tlhst : new u32(286), dhst : new u32( 30), ihst : new u32(19),\n\t\tlits : new u32(15000),\n\t\tstrt : new u16(1<<16),\n\t\tprev : new u16(1<<15)\n\t};  \n} ();\n\n(function(){\t\n\tvar len = 1<<15;\n\tfor(var i=0; i<len; i++) {\n\t\tvar x = i;\n\t\tx = (((x & 0xaaaaaaaa) >>> 1) | ((x & 0x55555555) << 1));\n\t\tx = (((x & 0xcccccccc) >>> 2) | ((x & 0x33333333) << 2));\n\t\tx = (((x & 0xf0f0f0f0) >>> 4) | ((x & 0x0f0f0f0f) << 4));\n\t\tx = (((x & 0xff00ff00) >>> 8) | ((x & 0x00ff00ff) << 8));\n\t\tU.rev15[i] = (((x >>> 16) | (x << 16)))>>>17;\n\t}\n\t\n\tfunction pushV(tgt, n, sv) {  while(n--!=0) tgt.push(0,sv);  }\n\t\n\tfor(var i=0; i<32; i++) {  U.ldef[i]=(U.of0[i]<<3)|U.exb[i];  U.ddef[i]=(U.df0[i]<<4)|U.dxb[i];  }\n\t\n\tpushV(U.fltree, 144, 8);  pushV(U.fltree, 255-143, 9);  pushV(U.fltree, 279-255, 7);  pushV(U.fltree,287-279,8);\n\t/*\n\tvar i = 0;\n\tfor(; i<=143; i++) U.fltree.push(0,8);\n\tfor(; i<=255; i++) U.fltree.push(0,9);\n\tfor(; i<=279; i++) U.fltree.push(0,7);\n\tfor(; i<=287; i++) U.fltree.push(0,8);\n\t*/\n\tmakeCodes(U.fltree, 9);\n\tcodes2map(U.fltree, 9, U.flmap);\n\trevCodes (U.fltree, 9);\n\t\n\tpushV(U.fdtree,32,5);\n\t//for(i=0;i<32; i++) U.fdtree.push(0,5);\n\tmakeCodes(U.fdtree, 5);\n\tcodes2map(U.fdtree, 5, U.fdmap);\n\trevCodes (U.fdtree, 5);\n\t\n\tpushV(U.itree,19,0);  pushV(U.ltree,286,0);  pushV(U.dtree,30,0);  pushV(U.ttree,320,0);\n\t/*\n\tfor(var i=0; i< 19; i++) U.itree.push(0,0);\n\tfor(var i=0; i<286; i++) U.ltree.push(0,0);\n\tfor(var i=0; i< 30; i++) U.dtree.push(0,0);\n\tfor(var i=0; i<320; i++) U.ttree.push(0,0);\n\t*/\n})();\n\nconst crc = {\r\n\ttable : ( function() {\r\n\t   var tab = new Uint32Array(256);\r\n\t   for (var n=0; n<256; n++) {\r\n\t\t\tvar c = n;\r\n\t\t\tfor (var k=0; k<8; k++) {\r\n\t\t\t\tif (c & 1)  c = 0xedb88320 ^ (c >>> 1);\r\n\t\t\t\telse        c = c >>> 1;\r\n\t\t\t}\r\n\t\t\ttab[n] = c;  }    \r\n\t\treturn tab;  })(),\r\n\tupdate : function(c, buf, off, len) {\r\n\t\tfor (var i=0; i<len; i++)  c = crc.table[(c ^ buf[off+i]) & 0xff] ^ (c >>> 8);\r\n\t\treturn c;\r\n\t},\r\n\tcrc : function(b,o,l)  {  return crc.update(0xffffffff,b,o,l) ^ 0xffffffff;  }\r\n};\r\n\r\nfunction inflateRaw(file, buf) {  return inflate(file, buf);  }\n\n/* global module */\n\nconst config = {\n  numWorkers: 1,\n  workerURL: '',\n  useWorkers: false,\n};\n\nlet nextId = 0;\n\n// Requests are put on a queue.\n// We don't send the request to the worker until the worker\n// is finished. This probably adds a small amount of latency\n// but the issue is imagine you have 2 workers. You give worker\n// A x seconds of work to do and worker B y seconds of work to\n// do. You don't know which will finish first. If you give\n// the worker with more work to do the request then you'll\n// waste time.\n\n// note: we can't check `workers.length` for deciding if\n// we've reached `config.numWorkers` because creation the worker\n// is async which means other requests to make workers might\n// come in before a worker gets added to `workers`\nlet numWorkers = 0;\nlet canUseWorkers = true;   // gets set to false if we can't start a worker\nconst workers = [];\nconst availableWorkers = [];\nconst waitingForWorkerQueue = [];\nconst currentlyProcessingIdToRequestMap = new Map();\n\nfunction handleResult(e) {\n  makeWorkerAvailable(e.target);\n  const {id, error, data} = e.data;\n  const request = currentlyProcessingIdToRequestMap.get(id);\n  currentlyProcessingIdToRequestMap.delete(id);\n  if (error) {\n    request.reject(error);\n  } else {\n    request.resolve(data);\n  }\n}\n\n// Because Firefox uses non-standard onerror to signal an error.\nfunction startWorker(url) {\n  return new Promise((resolve, reject) => {\n    const worker = new Worker(url);\n    worker.onmessage = (e) => {\n      if (e.data === 'start') {\n        worker.onerror = undefined;\n        worker.onmessage = undefined;\n        resolve(worker);\n      } else {\n        reject(new Error(`unexpected message: ${e.data}`));\n      }\n    };\n    worker.onerror = reject;\n  });\n}\n\nfunction dynamicRequire(mod, request) {\n  return mod.require(request);\n}\n\nconst workerHelper = (function() {\n  if (isNode) {\n    // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n    const {Worker} = dynamicRequire(module, 'worker_threads');\n    return {\n      async createWorker(url) {\n        return new Worker(url);\n      },\n      addEventListener(worker, fn) {\n        worker.on('message', (data) => {\n          fn({target: worker, data});\n        });\n      },\n      async terminate(worker) {\n        await worker.terminate();\n      },\n    };\n  } else {\n    return {\n      async createWorker(url) {\n        // I don't understand this security issue\n        // Apparently there is some iframe setting or http header\n        // that prevents cross domain workers. But, I can manually\n        // download the text and do it. I reported this to Chrome\n        // and they said it was fine so ¯\\_(ツ)_/¯\n        try {\n          const worker = await startWorker(url);\n          return worker;\n        } catch (e) {\n          console.warn('could not load worker:', url);\n        }\n\n        let text;\n        try {\n          const req = await fetch(url, {mode: 'cors'});\n          if (!req.ok) {\n            throw new Error(`could not load: ${url}`);\n          }\n          text = await req.text();\n          url = URL.createObjectURL(new Blob([text], {type: 'application/javascript'}));\n          const worker = await startWorker(url);\n          config.workerURL = url;  // this is a hack. What's a better way to structure this code?\n          return worker;\n        } catch (e) {\n          console.warn('could not load worker via fetch:', url);\n        }\n\n        if (text !== undefined) {\n          try {\n            url = `data:application/javascript;base64,${btoa(text)}`;\n            const worker = await startWorker(url);\n            config.workerURL = url;\n            return worker;\n          } catch (e) {\n            console.warn('could not load worker via dataURI');\n          }\n        }\n\n        console.warn('workers will not be used');\n        throw new Error('can not start workers');\n      },\n      addEventListener(worker, fn) {\n        worker.addEventListener('message', fn);\n      },\n      async terminate(worker) {\n        worker.terminate();\n      },\n    };\n  }\n}());\n\nfunction makeWorkerAvailable(worker) {\n  availableWorkers.push(worker);\n  processWaitingForWorkerQueue();\n}\n\nasync function getAvailableWorker() {\n  if (availableWorkers.length === 0 && numWorkers < config.numWorkers) {\n    ++numWorkers;  // see comment at numWorkers declaration\n    try {\n      const worker = await workerHelper.createWorker(config.workerURL);\n      workers.push(worker);\n      availableWorkers.push(worker);\n      workerHelper.addEventListener(worker, handleResult);\n    } catch (e) {\n      // set this global out-of-band (needs refactor)\n      canUseWorkers = false;\n    }\n  }\n  return availableWorkers.pop();\n}\n\n// @param {Uint8Array} src\n// @param {number} uncompressedSize\n// @param {string} [type] mime-type\n// @returns {ArrayBuffer|Blob} ArrayBuffer if type is falsy or Blob otherwise.\nfunction inflateRawLocal(src, uncompressedSize, type, resolve) {\n  const dst = new Uint8Array(uncompressedSize);\n  inflateRaw(src, dst);\n  resolve(type\n     ? new Blob([dst], {type})\n     : dst.buffer);\n}\n\nasync function processWaitingForWorkerQueue() {\n  if (waitingForWorkerQueue.length === 0) {\n    return;\n  }\n\n  if (config.useWorkers && canUseWorkers) {\n    const worker = await getAvailableWorker();\n    // canUseWorkers might have been set out-of-band (need refactor)\n    if (canUseWorkers) {\n      if (worker) {\n        if (waitingForWorkerQueue.length === 0) {\n          // the queue might be empty while we awaited for a worker.\n          makeWorkerAvailable(worker);\n          return;\n        }\n        const {id, src, uncompressedSize, type, resolve, reject} = waitingForWorkerQueue.shift();\n        currentlyProcessingIdToRequestMap.set(id, {id, resolve, reject});\n        const transferables = [];\n        // NOTE: Originally I thought you could transfer an ArrayBuffer.\n        // The code on this side is often using views into the entire file\n        // which means if we transferred we'd lose the entire file. That sucks\n        // because it means there's an expensive copy to send the uncompressed\n        // data to the worker.\n        //\n        // Also originally I thought we could send a Blob but we'd need to refactor\n        // the code in unzipit/readEntryData as currently it reads the uncompressed\n        // bytes.\n        //\n        //if (!isBlob(src) && !isSharedArrayBuffer(src)) {\n        //  transferables.push(src);\n        //}\n        worker.postMessage({\n          type: 'inflate',\n          data: {\n            id,\n            type,\n            src,\n            uncompressedSize,\n          },\n        }, transferables);\n      }\n      return;\n    }\n  }\n\n  // inflate locally\n  // We loop here because what happens if many requests happen at once\n  // the first N requests will try to async make a worker. Other requests\n  // will then be on the queue. But if we fail to make workers then there\n  // are pending requests.\n  while (waitingForWorkerQueue.length) {\n    const {src, uncompressedSize, type, resolve} = waitingForWorkerQueue.shift();\n    let data = src;\n    if (isBlob(src)) {\n      data = await readBlobAsUint8Array(src);\n    }\n    inflateRawLocal(data, uncompressedSize, type, resolve);\n  }\n}\n\nfunction setOptions(options) {\n  config.workerURL = options.workerURL || config.workerURL;\n  // there's no reason to set the workerURL if you're not going to use workers\n  if (options.workerURL) {\n    config.useWorkers = true;\n  }\n  config.useWorkers = options.useWorkers !== undefined ? options.useWorkers : config.useWorkers;\n  config.numWorkers = options.numWorkers || config.numWorkers;\n}\n\n// It has to take non-zero time to put a large typed array in a Blob since the very\n// next instruction you could change the contents of the array. So, if you're reading\n// the zip file for images/video/audio then all you want is a Blob on which to get a URL.\n// so that operation of putting the data in a Blob should happen in the worker.\n//\n// Conversely if you want the data itself then you want an ArrayBuffer immediately\n// since the worker can transfer its ArrayBuffer zero copy.\n//\n// @param {Uint8Array|Blob} src\n// @param {number} uncompressedSize\n// @param {string} [type] falsy or mimeType string (eg: 'image/png')\n// @returns {ArrayBuffer|Blob} ArrayBuffer if type is falsy or Blob otherwise.\nfunction inflateRawAsync(src, uncompressedSize, type) {\n  return new Promise((resolve, reject) => {\n    // note: there is potential an expensive copy here. In order for the data\n    // to make it into the worker we need to copy the data to the worker unless\n    // it's a Blob or a SharedArrayBuffer.\n    //\n    // Solutions:\n    //\n    // 1. A minor enhancement, if `uncompressedSize` is small don't call the worker.\n    //\n    //    might be a win period as their is overhead calling the worker\n    //\n    // 2. Move the entire library to the worker\n    //\n    //    Good, Maybe faster if you pass a URL, Blob, or SharedArrayBuffer? Not sure about that\n    //    as those are also easy to transfer. Still slow if you pass an ArrayBuffer\n    //    as the ArrayBuffer has to be copied to the worker.\n    //\n    // I guess benchmarking is really the only thing to try.\n    waitingForWorkerQueue.push({src, uncompressedSize, type, resolve, reject, id: nextId++});\n    processWaitingForWorkerQueue();\n  });\n}\n\nfunction clearArray(arr) {\n  arr.splice(0, arr.length);\n}\n\nasync function cleanup() {\n  for (const worker of workers) {\n    await workerHelper.terminate(worker);\n  }\n  clearArray(workers);\n  clearArray(availableWorkers);\n  clearArray(waitingForWorkerQueue);\n  currentlyProcessingIdToRequestMap.clear();\n  numWorkers = 0;\n  canUseWorkers = true;\n}\n\n/*\nclass Zip {\n  constructor(reader) {\n    comment,  // the comment for this entry\n    commentBytes, // the raw comment for this entry\n  }\n}\n*/\n\nfunction dosDateTimeToDate(date, time) {\n  const day = date & 0x1f; // 1-31\n  const month = (date >> 5 & 0xf) - 1; // 1-12, 0-11\n  const year = (date >> 9 & 0x7f) + 1980; // 0-128, 1980-2108\n\n  const millisecond = 0;\n  const second = (time & 0x1f) * 2; // 0-29, 0-58 (even numbers)\n  const minute = time >> 5 & 0x3f; // 0-59\n  const hour = time >> 11 & 0x1f; // 0-23\n\n  return new Date(year, month, day, hour, minute, second, millisecond);\n}\n\nclass ZipEntry {\n  constructor(reader, rawEntry) {\n    this._reader = reader;\n    this._rawEntry = rawEntry;\n    this.name = rawEntry.name;\n    this.nameBytes = rawEntry.nameBytes;\n    this.size = rawEntry.uncompressedSize;\n    this.compressedSize = rawEntry.compressedSize;\n    this.comment = rawEntry.comment;\n    this.commentBytes = rawEntry.commentBytes;\n    this.compressionMethod = rawEntry.compressionMethod;\n    this.lastModDate = dosDateTimeToDate(rawEntry.lastModFileDate, rawEntry.lastModFileTime);\n    this.isDirectory = rawEntry.uncompressedSize === 0 && rawEntry.name.endsWith('/');\n    this.encrypted = !!(rawEntry.generalPurposeBitFlag & 0x1);\n    this.externalFileAttributes = rawEntry.externalFileAttributes;\n    this.versionMadeBy = rawEntry.versionMadeBy;\n  }\n  // returns a promise that returns a Blob for this entry\n  async blob(type = 'application/octet-stream') {\n    return await readEntryDataAsBlob(this._reader, this._rawEntry, type);\n  }\n  // returns a promise that returns an ArrayBuffer for this entry\n  async arrayBuffer() {\n    return await readEntryDataAsArrayBuffer(this._reader, this._rawEntry);\n  }\n  // returns text, assumes the text is valid utf8. If you want more options decode arrayBuffer yourself\n  async text() {\n    const buffer = await this.arrayBuffer();\n    return decodeBuffer(new Uint8Array(buffer));\n  }\n  // returns text with JSON.parse called on it. If you want more options decode arrayBuffer yourself\n  async json() {\n    const text = await this.text();\n    return JSON.parse(text);\n  }\n}\n\nconst EOCDR_WITHOUT_COMMENT_SIZE = 22;\nconst MAX_COMMENT_SIZE = 0xffff; // 2-byte size\nconst EOCDR_SIGNATURE = 0x06054b50;\nconst ZIP64_EOCDR_SIGNATURE = 0x06064b50;\n\nasync function readAs(reader, offset, length) {\n  return await reader.read(offset, length);\n}\n\n// The point of this function is we want to be able to pass the data\n// to a worker as fast as possible so when decompressing if the data\n// is already a blob and we can get a blob then get a blob.\n//\n// I'm not sure what a better way to refactor this is. We've got examples\n// of multiple readers. Ideally, for every type of reader we could ask\n// it, \"give me a type that is zero copy both locally and when sent to a worker\".\n//\n// The problem is the worker would also have to know the how to handle this\n// opaque type. I suppose the correct solution is to register different\n// reader handlers in the worker so BlobReader would register some\n// `handleZeroCopyType<BlobReader>`. At the moment I don't feel like\n// refactoring. As it is you just pass in an instance of the reader\n// but instead you'd have to register the reader and some how get the\n// source for the `handleZeroCopyType` handler function into the worker.\n// That sounds like a huge PITA, requiring you to put the implementation\n// in a separate file so the worker can load it or some other workaround\n// hack.\n//\n// For now this hack works even if it's not generic.\nasync function readAsBlobOrTypedArray(reader, offset, length, type) {\n  if (reader.sliceAsBlob) {\n    return await reader.sliceAsBlob(offset, length, type);\n  }\n  return await reader.read(offset, length);\n}\n\nconst crc$1 = {\n  unsigned() {\n    return 0;\n  },\n};\n\nfunction getUint16LE(uint8View, offset) {\n  return uint8View[offset    ] +\n         uint8View[offset + 1] * 0x100;\n}\n\nfunction getUint32LE(uint8View, offset) {\n  return uint8View[offset    ] +\n         uint8View[offset + 1] * 0x100 +\n         uint8View[offset + 2] * 0x10000 +\n         uint8View[offset + 3] * 0x1000000;\n}\n\nfunction getUint64LE(uint8View, offset) {\n  return getUint32LE(uint8View, offset) +\n         getUint32LE(uint8View, offset + 4) * 0x100000000;\n}\n\n/* eslint-disable no-irregular-whitespace */\n// const decodeCP437 = (function() {\n//   const cp437 = '\\u0000☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ ';\n//\n//   return function(uint8view) {\n//     return Array.from(uint8view).map(v => cp437[v]).join('');\n//   };\n// }());\n/* eslint-enable no-irregular-whitespace */\n\nconst utf8Decoder = new TextDecoder();\nfunction decodeBuffer(uint8View, isUTF8) {  /* eslint-disable-line no-unused-vars */ /* lgtm [js/superfluous-trailing-arguments] */\n  if (isSharedArrayBuffer(uint8View.buffer)) {\n    uint8View = new Uint8Array(uint8View);\n  }\n  return utf8Decoder.decode(uint8View);\n  /*\n  AFAICT the UTF8 flat is not set so it's 100% up to the user\n  to self decode if their file is not utf8 filenames\n  return isUTF8\n      ? utf8Decoder.decode(uint8View)\n      : decodeCP437(uint8View);\n  */\n}\n\nasync function findEndOfCentralDirector(reader, totalLength) {\n  const size = Math.min(EOCDR_WITHOUT_COMMENT_SIZE + MAX_COMMENT_SIZE, totalLength);\n  const readStart = totalLength - size;\n  const data = await readAs(reader, readStart, size);\n  for (let i = size - EOCDR_WITHOUT_COMMENT_SIZE; i >= 0; --i) {\n    if (getUint32LE(data, i) !== EOCDR_SIGNATURE) {\n      continue;\n    }\n\n    // 0 - End of central directory signature\n    const eocdr = new Uint8Array(data.buffer, data.byteOffset + i, data.byteLength - i);\n    // 4 - Number of this disk\n    const diskNumber = getUint16LE(eocdr, 4);\n    if (diskNumber !== 0) {\n      throw new Error(`multi-volume zip files are not supported. This is volume: ${diskNumber}`);\n    }\n\n    // 6 - Disk where central directory starts\n    // 8 - Number of central directory records on this disk\n    // 10 - Total number of central directory records\n    const entryCount = getUint16LE(eocdr, 10);\n    // 12 - Size of central directory (bytes)\n    const centralDirectorySize = getUint32LE(eocdr, 12);\n    // 16 - Offset of start of central directory, relative to start of archive\n    const centralDirectoryOffset = getUint32LE(eocdr, 16);\n    // 20 - Comment length\n    const commentLength = getUint16LE(eocdr, 20);\n    const expectedCommentLength = eocdr.length - EOCDR_WITHOUT_COMMENT_SIZE;\n    if (commentLength !== expectedCommentLength) {\n      throw new Error(`invalid comment length. expected: ${expectedCommentLength}, actual: ${commentLength}`);\n    }\n\n    // 22 - Comment\n    // the encoding is always cp437.\n    const commentBytes = new Uint8Array(eocdr.buffer, eocdr.byteOffset + 22, commentLength);\n    const comment = decodeBuffer(commentBytes);\n\n    if (entryCount === 0xffff || centralDirectoryOffset === 0xffffffff) {\n      return await readZip64CentralDirectory(reader, readStart + i, comment, commentBytes);\n    } else {\n      return await readEntries(reader, centralDirectoryOffset, centralDirectorySize, entryCount, comment, commentBytes);\n    }\n  }\n\n  throw new Error('could not find end of central directory. maybe not zip file');\n}\n\nconst END_OF_CENTRAL_DIRECTORY_LOCATOR_SIGNATURE = 0x07064b50;\n\nasync function readZip64CentralDirectory(reader, offset, comment, commentBytes) {\n  // ZIP64 Zip64 end of central directory locator\n  const zip64EocdlOffset = offset - 20;\n  const eocdl = await readAs(reader, zip64EocdlOffset, 20);\n\n  // 0 - zip64 end of central dir locator signature\n  if (getUint32LE(eocdl, 0) !== END_OF_CENTRAL_DIRECTORY_LOCATOR_SIGNATURE) {\n    throw new Error('invalid zip64 end of central directory locator signature');\n  }\n\n  // 4 - number of the disk with the start of the zip64 end of central directory\n  // 8 - relative offset of the zip64 end of central directory record\n  const zip64EocdrOffset = getUint64LE(eocdl, 8);\n  // 16 - total number of disks\n\n  // ZIP64 end of central directory record\n  const zip64Eocdr = await readAs(reader, zip64EocdrOffset, 56);\n\n  // 0 - zip64 end of central dir signature                           4 bytes  (0x06064b50)\n  if (getUint32LE(zip64Eocdr, 0) !== ZIP64_EOCDR_SIGNATURE) {\n    throw new Error('invalid zip64 end of central directory record signature');\n  }\n  // 4 - size of zip64 end of central directory record                8 bytes\n  // 12 - version made by                                             2 bytes\n  // 14 - version needed to extract                                   2 bytes\n  // 16 - number of this disk                                         4 bytes\n  // 20 - number of the disk with the start of the central directory  4 bytes\n  // 24 - total number of entries in the central directory on this disk         8 bytes\n  // 32 - total number of entries in the central directory            8 bytes\n  const entryCount = getUint64LE(zip64Eocdr, 32);\n  // 40 - size of the central directory                               8 bytes\n  const centralDirectorySize = getUint64LE(zip64Eocdr, 40);\n  // 48 - offset of start of central directory with respect to the starting disk number     8 bytes\n  const centralDirectoryOffset = getUint64LE(zip64Eocdr, 48);\n  // 56 - zip64 extensible data sector                                (variable size)\n  return readEntries(reader, centralDirectoryOffset, centralDirectorySize, entryCount, comment, commentBytes);\n}\n\nconst CENTRAL_DIRECTORY_FILE_HEADER_SIGNATURE = 0x02014b50;\n\nasync function readEntries(reader, centralDirectoryOffset, centralDirectorySize, rawEntryCount, comment, commentBytes) {\n  let readEntryCursor = 0;\n  const allEntriesBuffer = await readAs(reader, centralDirectoryOffset, centralDirectorySize);\n  const rawEntries = [];\n\n  for (let e = 0; e < rawEntryCount; ++e) {\n    const buffer = allEntriesBuffer.subarray(readEntryCursor, readEntryCursor + 46);\n    // 0 - Central directory file header signature\n    const signature = getUint32LE(buffer, 0);\n    if (signature !== CENTRAL_DIRECTORY_FILE_HEADER_SIGNATURE) {\n      throw new Error(`invalid central directory file header signature: 0x${signature.toString(16)}`);\n    }\n    const rawEntry = {\n      // 4 - Version made by\n      versionMadeBy: getUint16LE(buffer, 4),\n      // 6 - Version needed to extract (minimum)\n      versionNeededToExtract: getUint16LE(buffer, 6),\n      // 8 - General purpose bit flag\n      generalPurposeBitFlag: getUint16LE(buffer, 8),\n      // 10 - Compression method\n      compressionMethod: getUint16LE(buffer, 10),\n      // 12 - File last modification time\n      lastModFileTime: getUint16LE(buffer, 12),\n      // 14 - File last modification date\n      lastModFileDate: getUint16LE(buffer, 14),\n      // 16 - CRC-32\n      crc32: getUint32LE(buffer, 16),\n      // 20 - Compressed size\n      compressedSize: getUint32LE(buffer, 20),\n      // 24 - Uncompressed size\n      uncompressedSize: getUint32LE(buffer, 24),\n      // 28 - File name length (n)\n      fileNameLength: getUint16LE(buffer, 28),\n      // 30 - Extra field length (m)\n      extraFieldLength: getUint16LE(buffer, 30),\n      // 32 - File comment length (k)\n      fileCommentLength: getUint16LE(buffer, 32),\n      // 34 - Disk number where file starts\n      // 36 - Internal file attributes\n      internalFileAttributes: getUint16LE(buffer, 36),\n      // 38 - External file attributes\n      externalFileAttributes: getUint32LE(buffer, 38),\n      // 42 - Relative offset of local file header\n      relativeOffsetOfLocalHeader: getUint32LE(buffer, 42),\n    };\n\n    if (rawEntry.generalPurposeBitFlag & 0x40) {\n      throw new Error('strong encryption is not supported');\n    }\n\n    readEntryCursor += 46;\n\n    const data = allEntriesBuffer.subarray(readEntryCursor, readEntryCursor + rawEntry.fileNameLength + rawEntry.extraFieldLength + rawEntry.fileCommentLength);\n    rawEntry.nameBytes = data.slice(0, rawEntry.fileNameLength);\n    rawEntry.name = decodeBuffer(rawEntry.nameBytes);\n\n    // 46+n - Extra field\n    const fileCommentStart = rawEntry.fileNameLength + rawEntry.extraFieldLength;\n    const extraFieldBuffer = data.slice(rawEntry.fileNameLength, fileCommentStart);\n    rawEntry.extraFields = [];\n    let i = 0;\n    while (i < extraFieldBuffer.length - 3) {\n      const headerId = getUint16LE(extraFieldBuffer, i + 0);\n      const dataSize = getUint16LE(extraFieldBuffer, i + 2);\n      const dataStart = i + 4;\n      const dataEnd = dataStart + dataSize;\n      if (dataEnd > extraFieldBuffer.length) {\n        throw new Error('extra field length exceeds extra field buffer size');\n      }\n      rawEntry.extraFields.push({\n        id: headerId,\n        data: extraFieldBuffer.slice(dataStart, dataEnd),\n      });\n      i = dataEnd;\n    }\n\n    // 46+n+m - File comment\n    rawEntry.commentBytes = data.slice(fileCommentStart, fileCommentStart + rawEntry.fileCommentLength);\n    rawEntry.comment = decodeBuffer(rawEntry.commentBytes);\n\n    readEntryCursor += data.length;\n\n    if (rawEntry.uncompressedSize            === 0xffffffff ||\n        rawEntry.compressedSize              === 0xffffffff ||\n        rawEntry.relativeOffsetOfLocalHeader === 0xffffffff) {\n      // ZIP64 format\n      // find the Zip64 Extended Information Extra Field\n      const zip64ExtraField = rawEntry.extraFields.find(e => e.id === 0x0001);\n      if (!zip64ExtraField) {\n        throw new Error('expected zip64 extended information extra field');\n      }\n      const zip64EiefBuffer = zip64ExtraField.data;\n      let index = 0;\n      // 0 - Original Size          8 bytes\n      if (rawEntry.uncompressedSize === 0xffffffff) {\n        if (index + 8 > zip64EiefBuffer.length) {\n          throw new Error('zip64 extended information extra field does not include uncompressed size');\n        }\n        rawEntry.uncompressedSize = getUint64LE(zip64EiefBuffer, index);\n        index += 8;\n      }\n      // 8 - Compressed Size        8 bytes\n      if (rawEntry.compressedSize === 0xffffffff) {\n        if (index + 8 > zip64EiefBuffer.length) {\n          throw new Error('zip64 extended information extra field does not include compressed size');\n        }\n        rawEntry.compressedSize = getUint64LE(zip64EiefBuffer, index);\n        index += 8;\n      }\n      // 16 - Relative Header Offset 8 bytes\n      if (rawEntry.relativeOffsetOfLocalHeader === 0xffffffff) {\n        if (index + 8 > zip64EiefBuffer.length) {\n          throw new Error('zip64 extended information extra field does not include relative header offset');\n        }\n        rawEntry.relativeOffsetOfLocalHeader = getUint64LE(zip64EiefBuffer, index);\n        index += 8;\n      }\n      // 24 - Disk Start Number      4 bytes\n    }\n\n    // check for Info-ZIP Unicode Path Extra Field (0x7075)\n    // see https://github.com/thejoshwolfe/yauzl/issues/33\n    const nameField = rawEntry.extraFields.find(e =>\n        e.id === 0x7075 &&\n        e.data.length >= 6 && // too short to be meaningful\n        e.data[0] === 1 &&    // Version       1 byte      version of this extra field, currently 1\n        getUint32LE(e.data, 1), crc$1.unsigned(rawEntry.nameBytes)); // NameCRC32     4 bytes     File Name Field CRC32 Checksum\n                                                                   // > If the CRC check fails, this UTF-8 Path Extra Field should be\n                                                                   // > ignored and the File Name field in the header should be used instead.\n    if (nameField) {\n        // UnicodeName Variable UTF-8 version of the entry File Name\n        rawEntry.fileName = decodeBuffer(nameField.data.slice(5));\n    }\n\n    // validate file size\n    if (rawEntry.compressionMethod === 0) {\n      let expectedCompressedSize = rawEntry.uncompressedSize;\n      if ((rawEntry.generalPurposeBitFlag & 0x1) !== 0) {\n        // traditional encryption prefixes the file data with a header\n        expectedCompressedSize += 12;\n      }\n      if (rawEntry.compressedSize !== expectedCompressedSize) {\n        throw new Error(`compressed size mismatch for stored file: ${rawEntry.compressedSize} != ${expectedCompressedSize}`);\n      }\n    }\n    rawEntries.push(rawEntry);\n  }\n  const zip = {\n    comment,\n    commentBytes,\n  };\n  return {\n    zip,\n    entries: rawEntries.map(e => new ZipEntry(reader, e)),\n  };\n}\n\nasync function readEntryDataHeader(reader, rawEntry) {\n  if (rawEntry.generalPurposeBitFlag & 0x1) {\n    throw new Error('encrypted entries not supported');\n  }\n  const buffer = await readAs(reader, rawEntry.relativeOffsetOfLocalHeader, 30);\n  // note: maybe this should be passed in or cached on entry\n  // as it's async so there will be at least one tick (not sure about that)\n  const totalLength = await reader.getLength();\n\n  // 0 - Local file header signature = 0x04034b50\n  const signature = getUint32LE(buffer, 0);\n  if (signature !== 0x04034b50) {\n    throw new Error(`invalid local file header signature: 0x${signature.toString(16)}`);\n  }\n\n  // all this should be redundant\n  // 4 - Version needed to extract (minimum)\n  // 6 - General purpose bit flag\n  // 8 - Compression method\n  // 10 - File last modification time\n  // 12 - File last modification date\n  // 14 - CRC-32\n  // 18 - Compressed size\n  // 22 - Uncompressed size\n  // 26 - File name length (n)\n  const fileNameLength = getUint16LE(buffer, 26);\n  // 28 - Extra field length (m)\n  const extraFieldLength = getUint16LE(buffer, 28);\n  // 30 - File name\n  // 30+n - Extra field\n  const localFileHeaderEnd = rawEntry.relativeOffsetOfLocalHeader + buffer.length + fileNameLength + extraFieldLength;\n  let decompress;\n  if (rawEntry.compressionMethod === 0) {\n    // 0 - The file is stored (no compression)\n    decompress = false;\n  } else if (rawEntry.compressionMethod === 8) {\n    // 8 - The file is Deflated\n    decompress = true;\n  } else {\n    throw new Error(`unsupported compression method: ${rawEntry.compressionMethod}`);\n  }\n  const fileDataStart = localFileHeaderEnd;\n  const fileDataEnd = fileDataStart + rawEntry.compressedSize;\n  if (rawEntry.compressedSize !== 0) {\n    // bounds check now, because the read streams will probably not complain loud enough.\n    // since we're dealing with an unsigned offset plus an unsigned size,\n    // we only have 1 thing to check for.\n    if (fileDataEnd > totalLength) {\n      throw new Error(`file data overflows file bounds: ${fileDataStart} +  ${rawEntry.compressedSize}  > ${totalLength}`);\n    }\n  }\n  return {\n    decompress,\n    fileDataStart,\n  };\n}\n\nasync function readEntryDataAsArrayBuffer(reader, rawEntry) {\n  const {decompress, fileDataStart} = await readEntryDataHeader(reader, rawEntry);\n  if (!decompress) {\n    const dataView = await readAs(reader, fileDataStart, rawEntry.compressedSize);\n    // make copy?\n    //\n    // 1. The source is a Blob/file. In this case we'll get back TypedArray we can just hand to the user\n    // 2. The source is a TypedArray. In this case we'll get back TypedArray that is a view into a larger buffer\n    //    but because ultimately this is used to return an ArrayBuffer to `someEntry.arrayBuffer()`\n    //    we need to return copy since we need the `ArrayBuffer`, not the TypedArray to exactly match the data.\n    //    Note: We could add another API function `bytes()` or something that returned a `Uint8Array`\n    //    instead of an `ArrayBuffer`. This would let us skip a copy here. But this case only happens for uncompressed\n    //    data. That seems like a rare enough case that adding a new API is not worth it? Or is it? A zip of jpegs or mp3s\n    //    might not be compressed. For now that's a TBD.\n    return isTypedArraySameAsArrayBuffer(dataView) ? dataView.buffer : dataView.slice().buffer;\n  }\n  // see comment in readEntryDateAsBlob\n  const typedArrayOrBlob = await readAsBlobOrTypedArray(reader, fileDataStart, rawEntry.compressedSize);\n  const result = await inflateRawAsync(typedArrayOrBlob, rawEntry.uncompressedSize);\n  return result;\n}\n\nasync function readEntryDataAsBlob(reader, rawEntry, type) {\n  const {decompress, fileDataStart} = await readEntryDataHeader(reader, rawEntry);\n  if (!decompress) {\n    const typedArrayOrBlob = await readAsBlobOrTypedArray(reader, fileDataStart, rawEntry.compressedSize, type);\n    if (isBlob(typedArrayOrBlob)) {\n      return typedArrayOrBlob;\n    }\n    return new Blob([isSharedArrayBuffer(typedArrayOrBlob.buffer) ? new Uint8Array(typedArrayOrBlob) : typedArrayOrBlob], {type});\n  }\n  // Here's the issue with this mess (should refactor?)\n  // if the source is a blob then we really want to pass a blob to inflateRawAsync to avoid a large\n  // copy if we're going to a worker.\n  const typedArrayOrBlob = await readAsBlobOrTypedArray(reader, fileDataStart, rawEntry.compressedSize);\n  const result = await inflateRawAsync(typedArrayOrBlob, rawEntry.uncompressedSize, type);\n  return result;\n}\n\nfunction setOptions$1(options) {\n  setOptions(options);\n}\n\nasync function unzipRaw(source) {\n  let reader;\n  if (typeof Blob !== 'undefined' && source instanceof Blob) {\n    reader = new BlobReader(source);\n  } else if (source instanceof ArrayBuffer || (source && source.buffer && source.buffer instanceof ArrayBuffer)) {\n    reader = new ArrayBufferReader(source);\n  } else if (isSharedArrayBuffer(source) || isSharedArrayBuffer(source.buffer)) {\n    reader = new ArrayBufferReader(source);\n  } else if (typeof source === 'string') {\n    const req = await fetch(source);\n    if (!req.ok) {\n      throw new Error(`failed http request ${source}, status: ${req.status}: ${req.statusText}`);\n    }\n    const blob = await req.blob();\n    reader = new BlobReader(blob);\n  } else if (typeof source.getLength === 'function' && typeof source.read === 'function') {\n    reader = source;\n  } else {\n    throw new Error('unsupported source type');\n  }\n\n  const totalLength = await reader.getLength();\n\n  if (totalLength > Number.MAX_SAFE_INTEGER) {\n    throw new Error(`file too large. size: ${totalLength}. Only file sizes up 4503599627370496 bytes are supported`);\n  }\n\n  return await findEndOfCentralDirector(reader, totalLength);\n}\n\n// If the names are not utf8 you should use unzipitRaw\nasync function unzip(source) {\n  const {zip, entries} = await unzipRaw(source);\n  return {\n    zip,\n    entries: Object.fromEntries(entries.map(v => [v.name, v])),\n  };\n}\n\nfunction cleanup$1() {\n  cleanup();\n}\n\nexport { HTTPRangeReader, cleanup$1 as cleanup, setOptions$1 as setOptions, unzip, unzipRaw };\n","import { XMLParser } from \"fast-xml-parser\";\nimport { unzip } from \"unzipit\";\nlet sections = [];\nlet contents = [];\nlet images = [];\nlet htmls = [];\nlet styles = [];\nlet meta;\nconst parseOpf = (xml) => {\n    const parsed = new XMLParser().parse(xml)[\"package\"];\n    meta = parseMeta(parsed[\"metadata\"] === undefined ? parsed[\"opf:metadata\"] : parsed[\"metadata\"]);\n    const parsedAtt = new XMLParser({ ignoreAttributes: false }).parse(xml)[\"package\"];\n    const manifestSections = parseManifest(parsedAtt[\"manifest\"]);\n    parseSpine(parsedAtt[\"spine\"], manifestSections);\n};\nexport const parser = async (epub) => {\n    contents = [];\n    images = [];\n    sections = [];\n    htmls = [];\n    parseOpf(await extract(epub));\n    assembleContent();\n    return { meta, contents, styles };\n};\nconst extract = async (file) => {\n    const { entries } = await unzip(file);\n    let opf = \"\";\n    for (const [name, entry] of Object.entries(entries)) {\n        switch (name.substring(name.lastIndexOf(\".\"))) {\n            case \".opf\":\n                opf = await entry.text();\n                break;\n            case \".jpg\":\n            case \".jpeg\":\n            case \".gif\":\n                const blob = await entry.blob();\n                const url = URL.createObjectURL(blob);\n                images.push({ name, url });\n                break;\n            case \".css\":\n                const css = await entry.text();\n                styles.push({ name, css });\n                break;\n            case \".htm\":\n            case \".xml\":\n            case \".html\":\n            case \".xhtml\":\n                const text = await entry.text();\n                htmls.push([name, text]);\n                break;\n            default: break;\n        }\n    }\n    return opf;\n};\nconst parseMeta = (meta) => {\n    const title = meta[\"dc:title\"];\n    const author = meta[\"dc:creator\"];\n    return { title, author };\n};\nconst parseManifest = (manifest) => {\n    let tempSection = [];\n    manifest[\"item\"].forEach(element => {\n        if (element[\"@_media-type\"] === \"application/xhtml+xml\" || element[\"@_media-type\"] === \"text/html\") {\n            tempSection.push({ id: element[\"@_id\"], href: element[\"@_href\"] });\n        }\n    });\n    return tempSection;\n};\nconst parseSpine = (spine, manifestSec) => {\n    let sortArr = [];\n    spine[\"itemref\"].forEach(obj => {\n        sortArr.push(obj[\"@_idref\"]);\n    });\n    sections = sortArr.map((i) => manifestSec.find((j) => j.id === i));\n};\nconst updateHTML = (html) => {\n    let newHTML = document.createElement('newHTML');\n    newHTML.innerHTML = html.trim();\n    for (let e of newHTML.getElementsByTagName(\"img\")) {\n        let index = -1;\n        let filename = e.src.split('\\\\').pop().split('/').pop();\n        for (let i = 0; i < images.length; i++) {\n            if (images[i].name.includes(filename)) {\n                index = i;\n                break;\n            }\n        }\n        if (index != -1) {\n            e.src = images[index].url;\n            e.style.cssText += 'max-height: 100%; max-width: 100%; object-fit: scale-down;';\n        }\n        else {\n            e.remove();\n        }\n    }\n    for (let linkE of newHTML.querySelectorAll(\"link\")) {\n        styles.forEach(stylesheet => {\n            if (linkE.href.includes(stylesheet.name.split('\\\\').pop().split('/').pop())) {\n                linkE.remove();\n            }\n        });\n    }\n    for (let aE of newHTML.getElementsByTagName(\"a\")) {\n        aE.removeAttribute(\"href\");\n        // TODO: Don't remove proper links to other websites.\n    }\n    return newHTML.innerHTML;\n};\nconst assembleContent = () => {\n    for (let i = 0; i < sections.length; i++) {\n        for (const [name, text] of htmls) {\n            if (name.includes(sections[i].href)) {\n                contents.push(updateHTML(text));\n                break;\n            }\n        }\n    }\n};\n","<main>\n    <div id=\"topbar\">\n        <div id=\"toptext\">\n            <slot name=\"toptext\" />\n        </div>\n\n        <div id=\"buttonbar\">\n            <slot name=\"buttons\" />\n        </div>\n    </div>\n</main>\n\n<style>\n    #buttonbar {\n        position: fixed;\n        top: 0;\n        right: 10%;\n        transition: all 0.3s;\n    }\n\n    #buttonbar :global(button) {\n        margin: auto;\n        border: none;\n        background-color: transparent;\n        cursor: pointer;\n        color: inherit;\n        font-size: 1.25em;\n        display: inline-block;\n    }\n\n    #buttonbar :global(button:hover) {\n        filter: invert(0.5);\n    }\n\n    #topbar {\n        text-align: center;\n        line-height: 2em;\n        top: 0;\n        height: 2em;\n        width: 100%;\n        font-size: 1.25em;\n        position: fixed;\n        background: var(--secondary-bg);\n        transition: background-color 0.5s;\n    }\n\n    #toptext :global(*) {\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        overflow: hidden;\n    }\n\n    @media (max-width: 1000px) {\n        #buttonbar {\n            right: 0;\n        }\n\n        #toptext {\n            text-align: left;\n            padding-left: 1%;\n            width: 75%;\n        }\n    }\n</style>\n","<script lang=\"ts\">\n    export let visible: boolean;\n    export let top: string;\n    export let right: string;\n\n</script>\n\n<main>\n    {#if visible}\n        <div id=\"popover\" style=\"top: {top}; right: {right}\">\n            <slot />\n        </div>\n    {/if}\n</main>\n\n<style>\n    #popover {\n        position: fixed;\n        padding: 0.5em;\n        background-color: var(--secondary-bg);\n        text-align: center;\n        color: var(--primary-color);\n        filter: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));\n        border-radius: 0.5em;\n    }\n</style>\n","<script lang=\"ts\">\n    export let theme: string;\n</script>\n\n<main id=\"themePicker\">\n    <div\n        style=\"background-color: #f6e4bd; color: #000\"\n        on:click={() => (theme = \"warm\")}\n    >\n        warm\n    </div>\n    <div\n        style=\"background-color: #000; color: #e9e9e9\"\n        on:click={() => (theme = \"black\")}\n    >\n        black\n    </div>\n    <div\n        style=\"background-color: #032038; color: #e9e9e9\"\n        on:click={() => (theme = \"dark\")}\n    >\n        dark\n    </div>\n    <div\n        style=\"background-color: #fff; color: #000\"\n        on:click={() => (theme = \"light\")}\n    >\n        light\n    </div>\n</main>\n\n<style>\n    #themePicker > div {\n        border-radius: 0.2em;\n        margin: 0.2em;\n        cursor: pointer;\n        user-select: none;\n    }\n</style>\n","<script lang=\"ts\">\n    import Popover from \"./Popover.svelte\";\n    import ThemePicker from \"./ThemePicker.svelte\";\n    \n    export let theme: string;\n\n    export let settings = {\n        fontSize: 16,\n        fontFamily: \"Verdana\",\n    };\n    export let settingsVisible = false;\n</script>\n\n<main>\n    <Popover bind:visible={settingsVisible} top={\"3.1em\"} right={\"10%\"}>\n        <label for=\"fontpicker\">Font:</label>\n        <br />\n        <select\n            name=\"fontpicker\"\n            bind:value={settings.fontFamily}\n            style=\"width: 100%;\"\n        >\n            <option style=\"font-family:'Verdana'\">Verdana</option>\n            <option style=\"font-family:'Arial'\">Arial</option>\n            <option style=\"font-family:'Courier New '\">Courier New </option>\n            <option style=\"font-family:'Helvetica'\">Helvetica</option>\n            <option style=\"font-family:'Times New Roman'\"\n                >Times New Roman</option\n            >\n        </select>\n        <br />\n        <label for=\"fontsize\">Font size:</label>\n        <br />\n        <input\n            name=\"fontsize\"\n            type=\"range\"\n            min=\"12\"\n            max=\"40\"\n            bind:value={settings.fontSize}\n        />\n\n        <ThemePicker bind:theme/>\n    </Popover>\n</main>\n\n<style>\n\n</style>\n","<script lang=\"ts\">\n    import { afterUpdate } from \"svelte\";\n    import type { Book } from \"./parse\";\n    import Topbar from \"./components/Topbar.svelte\";\n    import ReaderSettings from \"./components/ReaderSettings.svelte\";\n\n    export let book: Book;\n    export let theme: string;\n\n    let section = 0;\n\n    //$: percent = Math.floor(100 * (section / book.contents.length));\n\n    let settingsVisible = false;\n    let settings = {\n        fontSize: 16,\n        fontFamily: \"Verdana\",\n    };\n\n    let scrolled = 0;\n\n    let currentTitle = book.meta.title;\n\n    afterUpdate(() => {\n        if (currentTitle != book.meta.title) {\n            section = 0;\n            currentTitle = book.meta.title;\n            updateStyles();\n        }\n    });\n\n    const updateStyles = () => {\n        // Doesn't adapt based on which section is loaded, but works for now\n        for (let styleE of document.getElementsByTagName(\"style\")) {\n            //styleE.remove(); // Throws error parentNode = null.\n            styleE.innerHTML = \"\";\n        }\n\n        book.styles.forEach((stylesheet) => {\n            const styleE = document.createElement(\"style\");\n            styleE.innerText = stylesheet.css;\n            document.head.appendChild(styleE);\n        });\n    };\n\n    const updateSection = (inc) => {\n        if (0 <= section + inc && section + inc <= book.contents.length) {\n            section += inc;\n            scrolled = 0;\n        }\n    };\n\n    updateStyles();\n\n    const handleKeydown = ({ key }) => {\n        switch (key) {\n            case \"ArrowLeft\":\n                updateSection(-2);\n                break;\n            case \"ArrowRight\":\n                updateSection(2);\n                break;\n            default:\n                break;\n        }\n    };\n</script>\n\n<svelte:head>\n    <title>\n        {book.meta.title + \" - \" + book.meta.author}\n    </title>\n</svelte:head>\n\n<main>\n    <Topbar>\n        <div\n            slot=\"toptext\"\n            style=\"transition: opacity 0.3s; {scrolled > 100\n                ? 'opacity: 0.5;'\n                : ''}\"\n        >\n            <h4>\n                <b>{book !== undefined ? book.meta.title + \" - \" : \"\"}</b>\n                {book !== undefined ? book.meta.author : \"\"}\n            </h4>\n            <p id=\"progress\">{section}/{book.contents.length}</p>\n        </div>\n\n        <div slot=\"buttons\" style=\"display: inline-block\">\n            <button on:click={() => (settingsVisible = !settingsVisible)}>\n                ⚙\n            </button>\n            <button on:click={() => updateSection(-2)}>«</button>\n            <button on:click={() => updateSection(2)}>»</button>\n        </div>\n    </Topbar>\n\n    <div\n        id=\"container\"\n        style=\"font-size: {settings.fontSize}px; font-family: {settings.fontFamily};\"\n    >\n        {@html book.contents[section]}\n        {@html book.contents[section + 1]}\n    </div>\n\n    <ReaderSettings bind:theme bind:settingsVisible bind:settings />\n</main>\n\n<svelte:window bind:scrollY={scrolled} on:keydown={handleKeydown} />\n\n<style>\n    h4,\n    #progress {\n        display: inline;\n    }\n\n    #container {\n        margin: auto;\n        padding-top: 3em;\n        width: 50%;\n    }\n\n    @media (max-width: 1000px) {\n        #container {\n            width: 90%;\n        }\n    }\n</style>\n","<script lang=\"ts\">\n\timport { parser, Book } from \"./parse\";\n\n\timport Reader from \"./Reader.svelte\";\n\timport Topbar from \"./components/Topbar.svelte\";\n\timport Popover from \"./components/Popover.svelte\";\n\timport ThemePicker from \"./components/ThemePicker.svelte\";\n\n\tlet book: Book;\n\n\tasync function readFiles(file: object) {\n\t\tbook = await parser(file);\n\t\treading = true;\n\t}\n\n\tlet reading = false;\n\n\tlet dragging = false;\n\n\twindow.addEventListener(\"dragenter\", (e) => {\n\t\tif (e.dataTransfer.types.includes(\"Files\")) {\n\t\t\tdragging = true;\n\t\t}\n\t});\n\n\twindow.addEventListener(\"dragleave\", (e) => {\n\t\tdragging = false;\n\t\te.preventDefault();\n\t});\n\n\twindow.addEventListener(\"dragover\", (e) => e.preventDefault());\n\n\twindow.addEventListener(\"drop\", (e) => {\n\t\te.preventDefault();\n\t\tdragging = false;\n\t\treadFiles(e.dataTransfer.files[0]);\n\t});\n\n\tconst clickFile = () => {\n\t\tlet input = document.createElement(\"input\");\n\t\tinput.type = \"file\";\n\t\tinput.onchange = (e) => {\n\t\t\treadFiles((e.target as HTMLInputElement).files[0]);\n\t\t};\n\n\t\tinput.click();\n\t};\n\n\tlet theme: string;\n\n\tif (localStorage.getItem(\"theme\") !== null) {\n\t\ttheme = localStorage.getItem(\"theme\");\n\t} else {\n\t\ttheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n\t\t\t? \"dark\"\n\t\t\t: \"light\";\n\t}\n\n\tconst updateTheme = () => {\n\t\tdocument.documentElement.setAttribute(\"data-theme\", theme);\n\t\tlocalStorage.setItem(\"theme\", theme);\n\t};\n\n\t$: theme, updateTheme();\n\n\tlet settingsVisible = false;\n</script>\n\n<main>\n\t{#if reading}\n\t\t<Reader {book} bind:theme />\n\t{:else}\n\t\t<Topbar>\n\t\t\t<h3 slot=\"toptext\" style=\"display: inline;\">Essence Reader</h3>\n\t\t\t<button\n\t\t\t\tslot=\"buttons\"\n\t\t\t\ton:click={() => (settingsVisible = !settingsVisible)}\n\t\t\t>\n\t\t\t\t⚙\n\t\t\t</button>\n\t\t</Topbar>\n\n\t\t<Popover visible={settingsVisible} top={\"3.1em\"} right={\"10%\"}>\n\t\t\t<div style=\"width: 8em\">\n\t\t\t\t<p style=\"display: inline\">Select theme</p>\n\t\t\t\t<ThemePicker bind:theme />\n\t\t\t</div>\n\t\t</Popover>\n\n\t\t<div\n\t\t\ton:click={() => clickFile()}\n\t\t\tid=\"dropInfo\"\n\t\t\tstyle={dragging\n\t\t\t\t? \"border: 1px solid green; background-color: #dfffdf\"\n\t\t\t\t: \"\"}\n\t\t>\n\t\t\t<h1>📚</h1>\n\t\t\t<h2 style=\"color: {dragging ? 'green' : 'gray'}\">\n\t\t\t\tDrop anywhere or click to select a file\n\t\t\t</h2>\n\t\t</div>\n\t{/if}\n</main>\n\n<style>\n\th1 {\n\t\ttext-align: center;\n\t\tfont-size: 400%;\n\t\tmargin-bottom: 0;\n\t}\n\n\t#dropInfo {\n\t\tmargin: 4em auto;\n\t\tborder-radius: 10px;\n\t\tborder: 1px solid #537065;\n\t\ttext-align: center;\n\t\tuser-select: none;\n\t\twidth: 50%;\n\t\ttransition: all 0.3s ease;\n\t}\n\n\t#dropInfo:hover {\n\t\tbackground-color: #dfdff0;\n\t}\n\n\t@media (max-width: 1000px) {\n\t\t#dropInfo {\n\t\t\twidth: 90%;\n\t\t}\n\t}\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","option","__value","selected","selectedIndex","HtmlTag","constructor","this","e","n","c","html","h","m","nodeName","t","innerHTML","Array","from","childNodes","d","current_component","set_current_component","component","afterUpdate","Error","get_current_component","$$","after_update","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","bind","index","props","bound","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","type","indexOf","splice","$set","$$props","obj","$$set","keys","nameStartChar","nameRegexp","regexName","RegExp","exports","isExist","v","isEmptyObject","merge","arrayMode","getValue","isName","string","match","exec","getAllMatches","regex","matches","allmatches","startIndex","lastIndex","defaultOptions","allowBooleanAttributes","unpairedTags","isWhiteSpace","char","readPI","xmlData","start","tagname","substr","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","angleBracketsCount","readAttributeStr","attrStr","startChar","tagClosed","validAttrStrRegxp","validateAttributeString","util","attrNames","getPositionFromMatch","attrName","validateAttrName","hasOwnProperty","validateAmpersand","re","validateNumberAmpersand","count","code","message","lineNumber","err","msg","line","col","lines","substring","split","tags","tagFound","reachedRoot","tagStartPos","closingTag","tagName","trim","result","attrStrStart","isValid","otg","openPos","afterAmp","JSON","stringify","replace","preserveOrder","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","removeNSPrefix","parseTagValue","parseAttributeValue","trimValues","cdataPropName","numberParseOptions","hex","leadingZeros","tagValueProcessor","val","attributeValueProcessor","stopNodes","alwaysCreateTextNode","isArray","commentPropName","processEntities","htmlEntities","ignoreDeclaration","ignorePiTags","xmlNode","child","addChild","entityRegex","parseEntityExp","exp","entities","regx","DocTypeReader","hasBody","entity","comment","hexRegex","numRegex","Number","parseInt","parseFloat","consider","decimalPoint","eNotation","strnum","str","trimmedStr","skipLike","test","sign","numTrimmedByZeros","numStr","trimZeros","num","search","addExternalEntities","externalEntities","entKeys","ent","lastEntities","parseTextData","jPath","dontTrim","hasAttributes","isLeafNode","escapeEntities","replaceEntitiesValue","newval","parseValue","resolveNameSpace","prefix","charAt","attrsRegx","buildAttributesMap","attrs","oldVal","aName","newVal","attrCollection","parseXml","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","saveTextToParentTag","lastIndexOf","tagsNodeStack","tagData","readTagExp","childNode","tagExp","attrExpPresent","endIndex","readDocType","docTypeEntities","lastTag","isItStopNode","tagContent","readStopNodeData","entityName","currentTagName","allNodesExp","stopNodePath","stopNodeExp","errMsg","closingIndex","closingChar","attrBoundary","ch","tagExpWithClosingIndex","separatorIndex","shouldParse","toNumber","OrderedObjParser_1","amp","apos","gt","lt","quot","cent","pound","yen","euro","copyright","reg","inr","compress","arr","compressedObj","tagObj","property","propName","newJpath","isLeaf","isLeafTag","assignAttributes","attrMap","jpath","atrrName","propCount","buildOptions","require$$0","prettify","require$$1","XMLParser_1","parse","validationOption","toString","validator","validate","orderedObjParser","OrderedObjParser","orderedResult","addEntity","arrToStr","level","xmlStr","indentation","format","indentBy","repeat","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","tagStart","tagValue","suppressUnpairedNode","suppressEmptyNode","attrVal","suppressBooleanAttributes","textValue","orderedJs2Xml","jArray","Builder","isAttribute","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","buildAttrPairStr","object","j2x","tagEndExp","piClosingChar","startsWith","prototype","build","jObj","buildFromOrderedJs","arrayNodeName","Date","arrLen","j","item","Ks","L","fxp","XMLParser","XMLValidator","XMLBuilder","readBlobAsArrayBuffer","blob","arrayBuffer","reject","reader","FileReader","readAsArrayBuffer","async","readBlobAsUint8Array","Uint8Array","isBlob","Blob","isSharedArrayBuffer","SharedArrayBuffer","isNode","process","versions","electron","ArrayBufferReader","arrayBufferOrView","typedArray","ArrayBuffer","buffer","byteOffset","byteLength","offset","BlobReader","size","_check","buf","bl","nbuf","set","_decodeTiny","lmap","LL","pos","tree","bitsE","_bitsE","get17","_get17","lit","ll","ni","_copyOut","off","mx","tl","makeCodes","MAX_BITS","bits","max_code","bl_count","U","next_code","codes2map","r15","rev15","cl","i0","i1","revCodes","imb","dt","_bitsF","u16","Uint16Array","u32","Uint32Array","ordr","of0","exb","ldef","df0","dxb","ddef","flmap","fltree","fdmap","fdtree","ltree","ttree","dmap","dtree","imap","itree","lhst","dhst","ihst","lits","strt","prev","x","pushV","tgt","sv","crc","table","tab","inflateRaw","file","u8","bitsF","decodeTiny","noBuf","BFINAL","BTYPE","HLIT","HDIST","HCLEN","ML","MD","mx0","mx1","end","ebs","dcode","dlit","dbs","dst","p8","inflate","config","numWorkers","workerURL","useWorkers","nextId","waitingForWorkerQueue","startWorker","url","worker","Worker","onmessage","onerror","inflateRawLocal","uncompressedSize","inflateRawAsync","id","shift","processWaitingForWorkerQueue","mod","module","request","require","on","terminate","console","warn","req","fetch","mode","ok","URL","createObjectURL","btoa","ZipEntry","rawEntry","date","time","_reader","_rawEntry","nameBytes","compressedSize","commentBytes","compressionMethod","lastModDate","lastModFileDate","lastModFileTime","isDirectory","endsWith","encrypted","generalPurposeBitFlag","externalFileAttributes","versionMadeBy","decompress","fileDataStart","readEntryDataHeader","typedArrayOrBlob","readAsBlobOrTypedArray","readEntryDataAsBlob","dataView","readAs","readEntryDataAsArrayBuffer","decodeBuffer","read","sliceAsBlob","crc$1","unsigned","getUint16LE","uint8View","getUint32LE","getUint64LE","utf8Decoder","TextDecoder","isUTF8","decode","readZip64CentralDirectory","zip64EocdlOffset","eocdl","zip64EocdrOffset","zip64Eocdr","entryCount","centralDirectorySize","readEntries","centralDirectoryOffset","rawEntryCount","readEntryCursor","allEntriesBuffer","rawEntries","subarray","signature","versionNeededToExtract","crc32","fileNameLength","extraFieldLength","fileCommentLength","internalFileAttributes","relativeOffsetOfLocalHeader","fileCommentStart","extraFieldBuffer","extraFields","headerId","dataStart","dataEnd","zip64ExtraField","find","zip64EiefBuffer","nameField","fileName","expectedCompressedSize","zip","entries","totalLength","getLength","localFileHeaderEnd","fileDataEnd","unzipRaw","source","status","statusText","MAX_SAFE_INTEGER","min","EOCDR_WITHOUT_COMMENT_SIZE","readStart","eocdr","diskNumber","commentLength","expectedCommentLength","findEndOfCentralDirector","meta","sections","contents","images","htmls","styles","parser","epub","xml","parsed","parseMeta","parsedAtt","manifestSections","parseManifest","parseSpine","parseOpf","extract","assembleContent","fromEntries","unzip","opf","entry","css","title","author","manifest","tempSection","href","spine","manifestSec","sortArr","updateHTML","newHTML","getElementsByTagName","filename","includes","cssText","remove","linkE","querySelectorAll","stylesheet","aE","main","div2","div0","div1","div","create_if_block","visible","top","right","div3","theme","$$invalidate","fontFamily","call","label0","br0","option0","option1","option2","option3","option4","br1","label1","br2","fontSize","settings","settingsVisible","selected_option","querySelector","select_value","t0_value","t2_value","div_style_value","h4","t0","t2","t6","t6_value","button0","button1","button2","raw1_value","html_tag","raw0_value","current","html_tag_1","book","section","scrolled","currentTitle","updateStyles","styleE","innerText","head","updateSection","inc","h1","h2","h3","button","readFiles","reading","dragging","dataTransfer","types","preventDefault","files","clickFile","onchange","click","localStorage","getItem","matchMedia","documentElement","setItem","body"],"mappings":"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"}